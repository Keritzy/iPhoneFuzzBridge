// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "FuzzyAgent.pb.h"

@implementation FuzzyAgentRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [FuzzyAgentRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = [registry retain];
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface Control ()
@property int32_t opcode;
@property int32_t sequence;
@property int32_t type;
@property (retain) NSData* data;
@end

@implementation Control

- (BOOL) hasOpcode {
  return !!hasOpcode_;
}
- (void) setHasOpcode:(BOOL) value {
  hasOpcode_ = !!value;
}
@synthesize opcode;
- (BOOL) hasSequence {
  return !!hasSequence_;
}
- (void) setHasSequence:(BOOL) value {
  hasSequence_ = !!value;
}
@synthesize sequence;
- (BOOL) hasType {
  return !!hasType_;
}
- (void) setHasType:(BOOL) value {
  hasType_ = !!value;
}
@synthesize type;
- (BOOL) hasData {
  return !!hasData_;
}
- (void) setHasData:(BOOL) value {
  hasData_ = !!value;
}
@synthesize data;
- (void) dealloc {
  self.data = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.opcode = 0;
    self.sequence = 0;
    self.type = 0;
    self.data = [NSData data];
  }
  return self;
}
static Control* defaultControlInstance = nil;
+ (void) initialize {
  if (self == [Control class]) {
    defaultControlInstance = [[Control alloc] init];
  }
}
+ (Control*) defaultInstance {
  return defaultControlInstance;
}
- (Control*) defaultInstance {
  return defaultControlInstance;
}
- (BOOL) isInitialized {
  if (!self.hasOpcode) {
    return NO;
  }
  if (!self.hasSequence) {
    return NO;
  }
  if (!self.hasType) {
    return NO;
  }
  if (!self.hasData) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasOpcode) {
    [output writeInt32:1 value:self.opcode];
  }
  if (self.hasSequence) {
    [output writeInt32:2 value:self.sequence];
  }
  if (self.hasType) {
    [output writeInt32:3 value:self.type];
  }
  if (self.hasData) {
    [output writeData:4 value:self.data];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasOpcode) {
    size += computeInt32Size(1, self.opcode);
  }
  if (self.hasSequence) {
    size += computeInt32Size(2, self.sequence);
  }
  if (self.hasType) {
    size += computeInt32Size(3, self.type);
  }
  if (self.hasData) {
    size += computeDataSize(4, self.data);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Control*) parseFromData:(NSData*) data {
  return (Control*)[[[Control builder] mergeFromData:data] build];
}
+ (Control*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Control*)[[[Control builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Control*) parseFromInputStream:(NSInputStream*) input {
  return (Control*)[[[Control builder] mergeFromInputStream:input] build];
}
+ (Control*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Control*)[[[Control builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Control*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Control*)[[[Control builder] mergeFromCodedInputStream:input] build];
}
+ (Control*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Control*)[[[Control builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Control_Builder*) builder {
  return [[[Control_Builder alloc] init] autorelease];
}
+ (Control_Builder*) builderWithPrototype:(Control*) prototype {
  return [[Control builder] mergeFrom:prototype];
}
- (Control_Builder*) builder {
  return [Control builder];
}
@end

BOOL Control_AudioTypesIsValidValue(Control_AudioTypes value) {
  switch (value) {
    case Control_AudioTypesAudioFormatLinearPcm:
    case Control_AudioTypesAudioFormatAc3:
    case Control_AudioTypesAudioFormat60958Ac3:
    case Control_AudioTypesAudioFormatAppleIma4:
    case Control_AudioTypesAudioFormatMpeg4Aac:
    case Control_AudioTypesAudioFormatMpeg4Celp:
    case Control_AudioTypesAudioFormatMpeg4Hvxc:
    case Control_AudioTypesAudioFormatMpeg4TwinVq:
    case Control_AudioTypesAudioFormatMace3:
    case Control_AudioTypesAudioFormatMace6:
    case Control_AudioTypesAudioFormatUlaw:
    case Control_AudioTypesAudioFormatAlaw:
    case Control_AudioTypesAudioFormatQdesign:
    case Control_AudioTypesAudioFormatQdesign2:
    case Control_AudioTypesAudioFormatQualcomm:
    case Control_AudioTypesAudioFormatMpeglayer1:
    case Control_AudioTypesAudioFormatMpeglayer2:
    case Control_AudioTypesAudioFormatMpeglayer3:
    case Control_AudioTypesAudioFormatTimeCode:
    case Control_AudioTypesAudioFormatMidistream:
    case Control_AudioTypesAudioFormatParameterValueStream:
    case Control_AudioTypesAudioFormatAppleLossless:
    case Control_AudioTypesAudioFormatMpeg4AacHe:
    case Control_AudioTypesAudioFormatMpeg4AacLd:
    case Control_AudioTypesAudioFormatMpeg4AacHeV2:
    case Control_AudioTypesAudioFormatMpeg4AacSpatial:
    case Control_AudioTypesAudioFormatAmr:
    case Control_AudioTypesAudioFormatAudible:
    case Control_AudioTypesAudioFormatiLbc:
    case Control_AudioTypesAudioFormatDviintelIma:
    case Control_AudioTypesAudioFormatMicrosoftGsm:
    case Control_AudioTypesAudioFormatAes3:
      return YES;
    default:
      return NO;
  }
}
@interface Control_Builder()
@property (retain) Control* result;
@end

@implementation Control_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Control alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Control_Builder*) clear {
  self.result = [[[Control alloc] init] autorelease];
  return self;
}
- (Control_Builder*) clone {
  return [Control builderWithPrototype:result];
}
- (Control*) defaultInstance {
  return [Control defaultInstance];
}
- (Control*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Control*) buildPartial {
  Control* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Control_Builder*) mergeFrom:(Control*) other {
  if (other == [Control defaultInstance]) {
    return self;
  }
  if (other.hasOpcode) {
    [self setOpcode:other.opcode];
  }
  if (other.hasSequence) {
    [self setSequence:other.sequence];
  }
  if (other.hasType) {
    [self setType:other.type];
  }
  if (other.hasData) {
    [self setData:other.data];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Control_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Control_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setOpcode:[input readInt32]];
        break;
      }
      case 16: {
        [self setSequence:[input readInt32]];
        break;
      }
      case 24: {
        [self setType:[input readInt32]];
        break;
      }
      case 34: {
        [self setData:[input readData]];
        break;
      }
    }
  }
}
- (BOOL) hasOpcode {
  return result.hasOpcode;
}
- (int32_t) opcode {
  return result.opcode;
}
- (Control_Builder*) setOpcode:(int32_t) value {
  result.hasOpcode = YES;
  result.opcode = value;
  return self;
}
- (Control_Builder*) clearOpcode {
  result.hasOpcode = NO;
  result.opcode = 0;
  return self;
}
- (BOOL) hasSequence {
  return result.hasSequence;
}
- (int32_t) sequence {
  return result.sequence;
}
- (Control_Builder*) setSequence:(int32_t) value {
  result.hasSequence = YES;
  result.sequence = value;
  return self;
}
- (Control_Builder*) clearSequence {
  result.hasSequence = NO;
  result.sequence = 0;
  return self;
}
- (BOOL) hasType {
  return result.hasType;
}
- (int32_t) type {
  return result.type;
}
- (Control_Builder*) setType:(int32_t) value {
  result.hasType = YES;
  result.type = value;
  return self;
}
- (Control_Builder*) clearType {
  result.hasType = NO;
  result.type = 0;
  return self;
}
- (BOOL) hasData {
  return result.hasData;
}
- (NSData*) data {
  return result.data;
}
- (Control_Builder*) setData:(NSData*) value {
  result.hasData = YES;
  result.data = value;
  return self;
}
- (Control_Builder*) clearData {
  result.hasData = NO;
  result.data = [NSData data];
  return self;
}
@end

@interface Response ()
@property int32_t returnCode;
@end

@implementation Response

- (BOOL) hasReturnCode {
  return !!hasReturnCode_;
}
- (void) setHasReturnCode:(BOOL) value {
  hasReturnCode_ = !!value;
}
@synthesize returnCode;
- (void) dealloc {
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.returnCode = 0;
  }
  return self;
}
static Response* defaultResponseInstance = nil;
+ (void) initialize {
  if (self == [Response class]) {
    defaultResponseInstance = [[Response alloc] init];
  }
}
+ (Response*) defaultInstance {
  return defaultResponseInstance;
}
- (Response*) defaultInstance {
  return defaultResponseInstance;
}
- (BOOL) isInitialized {
  if (!self.hasReturnCode) {
    return NO;
  }
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasReturnCode) {
    [output writeInt32:1 value:self.returnCode];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (int32_t) serializedSize {
  int32_t size = memoizedSerializedSize;
  if (size != -1) {
    return size;
  }

  size = 0;
  if (self.hasReturnCode) {
    size += computeInt32Size(1, self.returnCode);
  }
  size += self.unknownFields.serializedSize;
  memoizedSerializedSize = size;
  return size;
}
+ (Response*) parseFromData:(NSData*) data {
  return (Response*)[[[Response builder] mergeFromData:data] build];
}
+ (Response*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Response*)[[[Response builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (Response*) parseFromInputStream:(NSInputStream*) input {
  return (Response*)[[[Response builder] mergeFromInputStream:input] build];
}
+ (Response*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Response*)[[[Response builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (Response*)[[[Response builder] mergeFromCodedInputStream:input] build];
}
+ (Response*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (Response*)[[[Response builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (Response_Builder*) builder {
  return [[[Response_Builder alloc] init] autorelease];
}
+ (Response_Builder*) builderWithPrototype:(Response*) prototype {
  return [[Response builder] mergeFrom:prototype];
}
- (Response_Builder*) builder {
  return [Response builder];
}
@end

@interface Response_Builder()
@property (retain) Response* result;
@end

@implementation Response_Builder
@synthesize result;
- (void) dealloc {
  self.result = nil;
  [super dealloc];
}
- (id) init {
  if ((self = [super init])) {
    self.result = [[[Response alloc] init] autorelease];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return result;
}
- (Response_Builder*) clear {
  self.result = [[[Response alloc] init] autorelease];
  return self;
}
- (Response_Builder*) clone {
  return [Response builderWithPrototype:result];
}
- (Response*) defaultInstance {
  return [Response defaultInstance];
}
- (Response*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (Response*) buildPartial {
  Response* returnMe = [[result retain] autorelease];
  self.result = nil;
  return returnMe;
}
- (Response_Builder*) mergeFrom:(Response*) other {
  if (other == [Response defaultInstance]) {
    return self;
  }
  if (other.hasReturnCode) {
    [self setReturnCode:other.returnCode];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (Response_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (Response_Builder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSet_Builder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    int32_t tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setReturnCode:[input readInt32]];
        break;
      }
    }
  }
}
- (BOOL) hasReturnCode {
  return result.hasReturnCode;
}
- (int32_t) returnCode {
  return result.returnCode;
}
- (Response_Builder*) setReturnCode:(int32_t) value {
  result.hasReturnCode = YES;
  result.returnCode = value;
  return self;
}
- (Response_Builder*) clearReturnCode {
  result.hasReturnCode = NO;
  result.returnCode = 0;
  return self;
}
@end

